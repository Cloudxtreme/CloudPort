---
- hosts: cloudport
  vars_files:
    - ../vars/application.yml
    - ../vars/go.yml
    - ../vars/secrets.yml
  vars:
    go_path: "{{ app_user_home }}/go/{{ go_version }}"
  become: yes
  tasks:
    - name: Disable hellborn Dash
      file: src=/bin/bash dest=/bin/sh owner=root group=root mode=0755 state=link force=yes
    - name: Add Brightbox PPA
      apt_repository: repo='ppa:brightbox/ruby-ng' state=present update_cache=yes
    - name: Install Ruby
      apt: pkg={{ item }} state=latest
      with_items:
        - "ruby{{ ruby_version }}"
        - "ruby{{ ruby_version }}-dev"
    - name: Create application user group
      group: name={{ app_group_name }} gid={{ app_user_gid }} state=present
    - name: Create application user
      user: name={{ app_user_name }}
            uid={{ app_user_uid }}
            group={{ app_group_name }}
            groups=docker
            home={{ app_user_home }}
            shell=/bin/bash
            comment='CloudPort application user'
            state=present
    - name: Create application host file
      template: src=../templates/app_host.j2
                dest={{ app_host_file }}
                owner=root
                group={{ app_group_name }}
                mode=0644
                force=no
    - name: Create application config file
      template: src=../templates/config.j2
                dest={{ app_conf_file }}
                owner={{ app_user_name }}
                group={{ app_group_name }}
                mode=0640
    - name: Create application user home
      file: name={{ app_user_home }}
            owner={{ app_user_name }}
            group={{ app_group_name }}
            mode=0755
            state=directory
    - name: Create application user Bash aliases file
      template: src=../templates/bash_aliases.j2
                dest={{ app_user_bash_aliases }}
                owner={{ app_user_name }}
                group={{ app_group_name }}
                mode=0644
    - name: Setup MySQL application user
      mysql_user: name={{ mysql_app_username }}
                  priv=*.*:ALL
                  host=localhost
                  password={{ mysql_app_password }}
                  check_implicit_admin=no
                  login_user=root
                  login_password={{ mysql_root_password }}
                  state=present
    - name: Create MySQL application user config file
      template: src=../templates/my.cnf.j2
                dest="{{ app_user_home }}/.my.cnf"
                owner={{ app_user_name }}
                group={{ app_group_name }}
                mode=0600
    - name: Create Go path
      file: name={{ go_path }}
            owner={{ app_user_name }}
            group={{ app_group_name }}
            mode=0755
            state=directory
    - name: Create application data path
      file: name={{ app_data_path }}
            owner={{ app_user_name }}
            group={{ app_group_name }}
            mode=0755
            state=directory
    - name: Create application user log path
      file: name={{ app_log_path }}
            owner={{ app_user_name }}
            group=adm
            mode=0755
            state=directory
    - name: Create application sudoers.d config file
      template: src=../templates/sudoers.d.j2
                dest={{ app_sudoers_file }}
                owner=root
                group=root
                mode=0440
                validate="visudo -c -f %s"
    - name: Create application logrotate.d config file
      template: src=../templates/logrotate.d.j2
                dest="/etc/logrotate.d/{{ app_name }}"
                owner=root
                group=root
                mode=0644
    - name: Create application Upstart config
      template: src=../templates/upstart.conf.j2
                dest={{ app_upstart_file }}
                owner={{ app_user_name }}
                group={{ app_group_name }}
                mode=0644
      notify:
        - Reload Upstart configuration
    - name: Create Nginx site configuration
      template: src=../templates/nginx.site.j2
                dest=/etc/nginx/sites-available/default
                owner=root
                group=root
                mode=0644
      notify:
        - Reload Nginx
  handlers:
    - name: Reload Upstart configuration
      shell: initctl reload-configuration
    - name: Reload Nginx
      service: name=nginx state=reloaded
