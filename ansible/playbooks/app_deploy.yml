---
- hosts: cloudport
  vars_files:
    - ../vars/application.yml
    - ../vars/secrets.yml
  vars:
    db_created_flag: "{{ app_user_home }}/.db_created"
    db_schema_loaded_flag: "{{ app_user_home }}/.db_schema_loaded"
  become: yes
  become_user: "{{ app_user_name }}"
  tasks:
    - name: Install bundler
      gem: name=bundler version={{ bundler_version }}
    - name: Get p.t.u. code from Git
      git: repo={{ ptu_repo }}
           dest={{ ptu_path }}
           version={{ ptu_version }}
           force=yes
      notify:
        - Install p.t.u. dependencies
        - Create p.t.u. tarball from repo
    - name: Get application code from Git
      git: repo={{ app_repo }}
           dest={{ app_path }}
           version={{ app_version }}
           force=yes
      notify:
        - Bundle install
        - Create database
        - Load database schema
        - Run database migrations
        - Reload application server
  handlers:
    - name: Install p.t.u. dependencies
      shell: ". {{ app_conf_file }} && script/install"
      args:
        chdir: "{{ ptu_path }}"
    - name: Create p.t.u. tarball from repo
      shell: "tar -C {{ ptu_path }} -c . -f {{ ptu_path }}.tar"
    - name: Bundle install
      shell: "{{ bundle }} install --retry=5 --deployment --without '{{ bundle_without }}'"
      args:
        chdir: "{{ app_path }}"
    - name: Create database
      shell: "{{ bundle }} exec rake db:create && touch {{ db_created_flag }}"
      args:
        chdir: "{{ app_path }}"
        creates: "{{ db_created_flag }}"
    - name: Load database schema
      shell: "{{ bundle }} exec rake db:schema:load && touch {{ db_schema_loaded_flag }}"
      args:
        chdir: "{{ app_path }}"
        creates: "{{ db_schema_loaded_flag }}"
    - name: Run database migrations
      shell: "{{ bundle }} exec rake db:migrate"
      args:
        chdir: "{{ app_path }}"
    - name: Reload application server
      shell: "sudo {{ app_reload_script }}"
